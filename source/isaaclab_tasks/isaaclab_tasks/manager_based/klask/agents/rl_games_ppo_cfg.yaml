###########################################
# RL Games Config Parameters
###########################################

params:
  seed: 42

  env:
    clip_observations: 5.0
    clip_actions: 1.0

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:
    name: actor_critic
    separate: False
    space:
      continuous:
        mu_activation: None
        sigma_activation: None

        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: True
    mlp:
      units: [32, 32]
      activation: elu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: False # flag which sets whether to load the checkpoint
  load_path: '' # path to the checkpoint to load

  config:
    full_experiment_name: test
    name: klask
    env_name: rlgpu
    device: 'cuda:0'
    device_name: 'cuda:0'
    multi_gpu: False
    ppo: True
    mixed_precision: False
    normalize_input: False
    normalize_value: False
    num_actors: -1  # configured from the script (based on num_envs)
    reward_shaper:
      scale_value: 1.0
    normalize_advantage: False
    gamma: 0.99
    tau : 0.95
    learning_rate: 3e-4
    lr_schedule: adaptive
    kl_threshold: 0.008
    #score_to_win: 20000
    max_epochs: -1
    max_frames: !!int 10_000_000
    save_best_after: 50
    save_frequency: 25
    grad_norm: 1.0
    entropy_coef: 0.0
    truncate_grads: True
    e_clip: 0.2
    horizon_length: 16
    minibatch_size: 4096
    mini_epochs: 8
    critic_coef: 4
    clip_value: True
    seq_length: 4
    bounds_loss_coef: 0.0001
    self_play: False
    #self_play_config:
      #update_score: -100.0
      #games_to_check: 1
      #env_update_num: 4096


###########################################
# Custom Config Parameters
###########################################

env:
  # std of Gaussian noise added to the observations (implemented as ObservationNoiseWrapper)
  obs_noise: 0.0 

rewards:
  # reward terms and their weights:
  player_in_goal: !!float -10.0
  goal_scored: !!float 10.0
  goal_conceded: !!float -10.0
  distance_ball_opponent_goal:
    # if per_second is True, the reward is scaled by dt (environment time step)
    weight: 1.0
    per_second: True
  ball_speed: !!float 0.0
  distance_player_ball_own_half: !!float 0.0
  ball_stationary: !!float 0.0
  collision_player_ball: !!float 1.0

terminations:
  # If left out of the config.yaml file, terminations are active by default; use this if you want to
  # deactivate a specific termination criteria by setting it to False
  time_out: True
  goal_scored: True
  goal_conceded: True
  player_in_goal: True
